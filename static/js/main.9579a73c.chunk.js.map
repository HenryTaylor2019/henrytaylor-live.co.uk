{"version":3,"sources":["contexts/PlayerContext.js","components/TeamSize.js","components/Header.js","components/PlayerNameForm.js","components/PlayerTable.js","components/TournamentPage.js","components/Footer.js","ComponentHandler.js","App.js","serviceWorker.js","index.js"],"names":["PlayerContext","createContext","PlayerContextProvider","state","playerName","players","noOfPlayers","submittedPlayers","randomPlayer","team","suddenDeathTeam","handleNumber","e","setState","target","value","preventDefault","handleInput","handleSubmit","handleGenerate","handleTeams","handleShuffle","array","temp","index","ctr","length","Math","floor","random","shuffle","handleReset","handleSuddenDeath","randomTwo","slice","Provider","this","props","children","Component","TeamSize","context","className","type","onChange","min","contextType","Header","src","alt","PlayerNameForm","warningMessage","addPlayers","onClick","PlayerTable","map","name","key","TournamentPage","visible","playerShuffle","Footer","ComponentHandler","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9579a73c.chunk.js","sourcesContent":["import React, { createContext, Component } from 'react';\n\nexport const PlayerContext = createContext();\n\nclass PlayerContextProvider extends Component {\n    state = {\n        playerName: '',\n        players: [],\n        noOfPlayers: null,\n        submittedPlayers: [],\n        randomPlayer: '',\n        team: [],\n        suddenDeathTeam: [],\n    }\n\n    handleNumber = (e) => {\n        this.setState({ noOfPlayers: e.target.value });\n        e.preventDefault();\n    }\n\n    handleInput = (e) => {\n\n        this.setState({ playerName: e.target.value });\n        e.preventDefault();\n    }\n\n    handleSubmit = (e) => {\n\n        this.setState({\n            playerName: '',\n            players: [\n                ...this.state.players,\n                this.state.playerName\n            ]\n        });\n        e.preventDefault();\n    }\n\n    handleGenerate = (e) => {\n        \n        this.setState({\n            submittedPlayers: [\n                ...this.state.submittedPlayers,\n                this.state.players,]\n        })\n        e.preventDefault();\n    }\n\n    handleTeams = () => {\n  \n        this.setState({\n           playerName: \"\",\n           players: [],\n           team: [...this.state.players],\n        })\n    }\n\n    handleShuffle = () => {\n \n        let shuffle = (array) => {\n            var ctr = array.length, temp, index;\n\n            while (ctr > 0) {\n                index = Math.floor(Math.random() * ctr);\n                ctr--;\n                temp = array[ctr];\n                array[ctr] = array[index];\n                array[index] = temp;\n            }\n            return array;\n        }\n\n        this.setState({\n           team: shuffle(this.state.team),\n        })\n    }\n\n    handleReset = () => {\n\n        this.setState({\n            playerName: '',\n            players: [],\n            noOfPlayers: null,\n            submittedPlayers: [],\n            randomPlayer: '',\n            team: [],\n            suddenDeathTeam: [],\n        })\n    }\n\n    handleSuddenDeath = () => {\n\n        let shuffle = (array) => {\n            var ctr = array.length, temp, index;\n\n            while (ctr > 0) {\n                index = Math.floor(Math.random() * ctr);\n                ctr--;\n                temp = array[ctr];\n                array[ctr] = array[index];\n                array[index] = temp;\n            }\n            return array;\n        }\n        let shuffled = shuffle(this.state.team)\n        let randomTwo = shuffled.slice(0, 2)\n\n        this.setState({\n            suddenDeathTeam: randomTwo\n        })\n    }\n\n    render() {\n      \n        return (\n            <PlayerContext.Provider value={{ \n                ...this.state, \n                handleNumber: this.handleNumber, \n                handleInput: this.handleInput,\n                handleSubmit: this.handleSubmit,\n                handleGenerate: this.handleGenerate,\n                handleTeams: this.handleTeams,\n                handleShuffle: this.handleShuffle,\n                handleReset: this.handleReset,\n                handleSuddenDeath: this.handleSuddenDeath,\n                }}>\n\n                {this.props.children}\n            </PlayerContext.Provider>\n        );\n    }\n}\n\nexport default PlayerContextProvider;","import React, { Component } from 'react';\nimport { PlayerContext } from '../contexts/PlayerContext';\n\nclass TeamSize extends Component {\n    static contextType = PlayerContext;\n    render() {\n        const { handleNumber, noOfPlayers, players, team } = this.context;\n\n        return (\n            <div>\n                <div className=\"ui form \">\n                    {players.length > 0 || team.length ? <h3>{noOfPlayers} player game</h3> :\n                        <div className=\"center\">\n                            <label>Enter No. of Players</label>\n                            <div className=\"gen-style\">\n                                <input className=\"center\" type=\"number\" value={noOfPlayers} onChange={handleNumber} min=\"0\" />\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default TeamSize;","import React from 'react';\n\nconst Header = () => {\n\n    return (\n        <div className=\"header\">\n            <div>\n                <img className=\"img-header\" src=\"https://freesvg.org/img/Paddle-1294900.png\" alt=\"App Logo\"/>\n            </div>\n            \n            <h1>Ping Pong Matchmaker</h1>\n\n            <section>\n\n                <p>Choose up to 16 players and let Ping Pong Matchmaker generate your teams</p>\n            </section>\n\n        </div>\n    )\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { PlayerContext } from '../contexts/PlayerContext';\n\n\nclass PlayerNameForm extends Component {\n    static contextType = PlayerContext;\n\n    render() {\n        const { handleInput, handleSubmit, playerName, noOfPlayers, handleTeams, players, team } = this.context;\n\n        let addPlayers = (noOfPlayers - players.length);\n\n        let warningMessage;\n        // Conditional managing winner message to be refactored \n        if (noOfPlayers < 4 && noOfPlayers > 0) {\n            warningMessage = \"Add more players\"\n        } else if (noOfPlayers > 16) {\n            warningMessage = \"Too Many Players\"\n        } else if (noOfPlayers % 2 !== 0 && noOfPlayers > 0) {\n            warningMessage = \"Must be even numbers\"\n        } else {\n            warningMessage = \"\";\n        }\n\n        return (\n            <div className=\"gen-style\">\n                <div className=\"ui form\" >\n                    <form>\n                        {warningMessage || handleTeams === true ? <p className=\"warning\">{warningMessage}</p> :\n                            <div>\n\n                                {/* Manage visibilty to ensure players cannnot add players until team size has been decided */}\n                                {noOfPlayers <= players.length || team.length > !0 ? null :\n                                    <div>\n                                        <label>Enter {addPlayers} Names</label>\n\n                                        <input className=\"gen-style\" type=\"text\" value={playerName} onChange={handleInput} />\n                                        <div className=\"button-div\">\n                                            <button className=\"ui secondary button\" onClick={handleSubmit}>Add Player</button>\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                        }\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PlayerNameForm;","import React, { Component } from 'react';\nimport { PlayerContext } from '../contexts/PlayerContext';\n\n\nclass PlayerTable extends Component {\n    static contextType = PlayerContext;\n\n    render() {\n        const { players, noOfPlayers, handleTeams } = this.context;\n\n        return (\n\n            <div className=\"center main-form\">\n                <table className=\"ui celled table \">\n                    <tbody className=\"center\"> \n                        {    \n                            players.map((name, index) => (\n                                <tr key={index <= noOfPlayers - 1 ? index + 1 : index}>\n                                    {/* <td >{index + 1}</td> */}\n                                    <td>{name}</td>\n                                </tr>\n                            ))\n                        }\n                    </tbody>\n                </table>\n                {/* Start game only when sufficiant players have been assigned */}\n                {players.length >= noOfPlayers && players.length > 0 ? \n                <button className=\"ui secondary button\" onClick={handleTeams}>Make Game</button>\n                : null}\n            </div>\n        )\n    };\n}\n\nexport default PlayerTable;","import React, { Component } from 'react';\nimport { PlayerContext } from '../contexts/PlayerContext';\n\nclass TournamentPage extends Component {\n    static contextType = PlayerContext;\n\n    render() {\n        const { team, suddenDeathTeam } = this.context;\n        let visible = team.length > 0 ? \"card tournament-div\" : null;\n\n        let shuffle = (array) => {\n            var ctr = array.length, temp, index;\n            // To ensure random selection of players\n            while (ctr > 0) {\n                index = Math.floor(Math.random() * ctr);\n                ctr--;\n                temp = array[ctr];\n                array[ctr] = array[index];\n                array[index] = temp;\n            }\n            return array;\n        }\n\n        let playerShuffle = shuffle(team);\n\n        return (\n            <>\n                {suddenDeathTeam.length === 0 ?\n                    <div className={visible}>\n                        <div className=\"ui equal width grid\">\n                            {/* Conditionals used to only display matches per number of players */}\n                            {team.length >= 4 ?\n                                <div className=\"column\"><h4>{playerShuffle[0]}</h4> VS <h4>{playerShuffle[1]}</h4></div>\n                                : null}\n                            {team.length >= 4 ?\n                                <div className=\"column\"><h4>{playerShuffle[2]}</h4> VS <h4>{playerShuffle[3]}</h4></div>\n                                : null}\n                            {team.length >= 6 ?\n                                <div className=\"column\"><h4>{playerShuffle[4]}</h4> VS <h4>{playerShuffle[5]}</h4></div>\n                                : null}\n                            {team.length >= 8 ?\n                                <div className=\"column\"><h4>{playerShuffle[6]}</h4> VS <h4>{playerShuffle[7]}</h4></div>\n                                : null}\n                        </div>\n                        <div className=\"ui equal width grid\">\n                            {team.length >= 10 ?\n                                <div className=\"column\"><h4>{playerShuffle[8]}</h4> VS <h4>{playerShuffle[9]}</h4></div>\n                                : null}\n                            {team.length >= 12 ?\n                                <div className=\"column\"><h4>{playerShuffle[10]}</h4> VS <h4>{playerShuffle[11]}</h4></div>\n                                : null}\n                            {team.length >= 14 ?\n                                <div className=\"column\"><h4>{playerShuffle[12]}</h4> VS <h4>{playerShuffle[13]}</h4></div>\n                                : null}\n                            {team.length >= 16 ?\n                                <div className=\"column\"><h4>{playerShuffle[13]}</h4> VS <h4>{playerShuffle[14]}</h4></div>\n                                : null}\n                        </div>\n                    </div>\n                    :\n                    <div className=\"card tournament-div\">\n                        <div className=\"column\"><h1>{suddenDeathTeam[0]} VS {suddenDeathTeam[1]}</h1></div>\n                    </div>\n\n                }\n\n            </>\n        )\n    }\n}\n\nexport default TournamentPage;","import React, { Component } from 'react';\nimport { PlayerContext } from '../contexts/PlayerContext';\n\nclass Footer extends Component {\n    static contextType = PlayerContext;\n\n\n\n    render() {\n        const { handleReset, handleShuffle, team, handleSuddenDeath } = this.context;\n        return (\n            <div className=\"footer\">\n                {team.length > 0 ?\n                    <div>\n                        <div className=\"end-buttons\">\n                            <button className=\"ui secondary button\" onClick={handleShuffle}>Shuffle Players</button>\n                            <button className=\"ui secondary button\" onClick={handleReset}>New Tournament</button>\n                            <button className=\"ui secondary button\" onClick={handleSuddenDeath}>Sudden Death</button>\n                        </div>\n                    </div>\n                    : null\n                }\n            </div>\n        )\n    }\n}\nexport default Footer;","import React, { Component } from 'react';\nimport PlayerContextProvider from './contexts/PlayerContext';\n\n\nimport TeamSize from './components/TeamSize';\nimport Header from './components/Header';\nimport PlayerNameForm from './components/PlayerNameForm';\nimport PlayerTable from './components/PlayerTable';\n// import Tournament from './components/Tournament';\nimport TournamentPage from './components/TournamentPage';\nimport Footer from './components/Footer';\n\n\nclass ComponentHandler extends Component {\n    render() {\n\n        return (\n            <div className=\"container-md\">\n                <Header />\n                <PlayerContextProvider>\n                    <div className=\"card main-form\">\n\n                        <TeamSize />\n\n                        <PlayerNameForm />\n\n                        <PlayerTable />\n                    </div>\n                    {/* <Tournament /> */}\n                    <TournamentPage />\n                    <Footer />\n                </PlayerContextProvider>\n            </div>\n        );\n    }\n}\n\nexport default ComponentHandler;\n","import React from 'react';\nimport ComponentHandler from './ComponentHandler';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ComponentHandler />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}